-- =======================================================================
-- SCRIPT MAESTRO PARA LA CREACIÓN DE LA BASE DE DATOS NVDPA
-- =======================================================================
-- Este script es idempotente, lo que significa que se puede ejecutar
-- múltiples veces sin causar errores. Borra las tablas existentes
-- antes de volver a crearlas.
-- =======================================================================

-- Parte 1: Borrado de Tablas Existentes (en orden inverso de dependencia)
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE CLIENTE_OPERACIONES CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE PROVEEDOR_SERVICIO CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE PETICIONESSERVICIO CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE SERVICIO_ESCALA CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE TRANSACCION CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE CARGA CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE ESCALA_PORTUARIA CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE TRIPULACION CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE EMPLEADO CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE USUARIOS CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE ROLES CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE EMPRESAS_PROVEEDORAS CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE SERVICIO CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE TIPO_SERVICIO CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE BARCO CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE TIPO_BARCO CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE PUERTO CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE CLIENTE CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE PAIS CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE DEPARTAMENTO CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE CARGO CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE TIPO_MONEDA CASCADE CONSTRAINTS';
   EXECUTE IMMEDIATE 'DROP TABLE METODO_PAGO CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

-- =======================================================================
-- Parte 2: Creación de Tablas de Catálogo (Lookup Tables)
-- =======================================================================
CREATE TABLE PAIS (
    ID_PAIS NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PAIS VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE TIPO_BARCO (
    ID_TIPO_BARCO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TIPO_BARCO VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE TIPO_SERVICIO (
    ID_TIPO_SERVICIO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    
);

CREATE TABLE DEPARTAMENTO (
    ID_DEPARTAMENTO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEPARTAMENTO VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE CARGO (
    ID_CARGO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CARGO VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE TIPO_MONEDA (
    ID_MONEDA NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE_MONEDA VARCHAR2(50) NOT NULL UNIQUE,
    CODIGO_ISO VARCHAR2(3) NOT NULL UNIQUE
);

CREATE TABLE METODO_PAGO (
    ID_METODO_PAGO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE_METODO VARCHAR2(100) NOT NULL UNIQUE
);

CREATE TABLE EMPRESAS_PROVEEDORAS (
    ID_PROVEEDOR NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE_EMPRESA VARCHAR2(150) NOT NULL UNIQUE,
    RUC VARCHAR2(20) UNIQUE,
    TELEFONO VARCHAR2(50),
    EMAIL VARCHAR2(100)
);

CREATE TABLE ROLES (
    RolID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NombreRol VARCHAR2(50) NOT NULL UNIQUE
);


-- =======================================================================
-- Parte 3: Creación de Tablas Principales (Entidades)
-- =======================================================================
CREATE TABLE CLIENTE (
    ID_CLIENTE NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    DIRECCION VARCHAR2(255),
    INFO_CONTACTO VARCHAR2(100)
);

CREATE TABLE PUERTO (
    ID_PUERTO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    UBICACION VARCHAR2(100),
    LATITUD NUMBER,
    LONGITUD NUMBER,
    ID_PAIS NUMBER,
    CONSTRAINT fk_puerto_pais FOREIGN KEY (ID_PAIS) REFERENCES PAIS(ID_PAIS)
);

CREATE TABLE BARCO (
    ID_BARCO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    NUMERO_IMO VARCHAR2(7) NOT NULL UNIQUE,
    ID_TIPO_BARCO NUMBER,
    ID_PAIS_BANDERA NUMBER,
    ID_CLIENTE NUMBER,
    CONSTRAINT fk_barco_tipobarco FOREIGN KEY (ID_TIPO_BARCO) REFERENCES TIPO_BARCO(ID_TIPO_BARCO),
    CONSTRAINT fk_barco_paisbandera FOREIGN KEY (ID_PAIS_BANDERA) REFERENCES PAIS(ID_PAIS),
    CONSTRAINT fk_barco_cliente FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

CREATE TABLE SERVICIO (
    ID_SERVICIO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE_SERVICIO VARCHAR2(100) NOT NULL,
    DESCRIPCION VARCHAR2(255),
    ID_TIPO_SERVICIO NUMBER,
    CONSTRAINT fk_servicio_tiposervicio FOREIGN KEY (ID_TIPO_SERVICIO) REFERENCES TIPO_SERVICIO(ID_TIPO_SERVICIO)
);

CREATE TABLE USUARIOS (
    UsuarioID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Nombre VARCHAR2(100) NOT NULL UNIQUE,
    Password VARCHAR2(60) NOT NULL,
    RolID NUMBER NOT NULL,
    BarcoID NUMBER,
    CONSTRAINT fk_usuarios_rol FOREIGN KEY (RolID) REFERENCES ROLES(RolID),
    CONSTRAINT fk_usuarios_barco FOREIGN KEY (BarcoID) REFERENCES BARCO(ID_BARCO)
);

CREATE TABLE EMPLEADO (
    ID_EMPLEADO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE VARCHAR2(100) NOT NULL,
    APELLIDO VARCHAR2(100) NOT NULL,
    CEDULA VARCHAR2(20) NOT NULL UNIQUE,
    USUARIO_ID NUMBER UNIQUE,
    ID_CARGO NUMBER,
    ID_DEPARTAMENTO NUMBER,
    CONSTRAINT fk_empleado_cargo FOREIGN KEY (ID_CARGO) REFERENCES CARGO(ID_CARGO),
    CONSTRAINT fk_empleado_departamento FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTO(ID_DEPARTAMENTO),
    CONSTRAINT fk_empleado_usuarios FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(UsuarioID)
);

CREATE TABLE TRIPULACION (
    ID_TRIPULACION NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE VARCHAR2(150) NOT NULL,
    ROL VARCHAR2(50),
    NUMERO_PASAPORTE VARCHAR2(50) NOT NULL UNIQUE,
    ID_PAIS_NACIONALIDAD NUMBER,
    ID_BARCO NUMBER,
    CONSTRAINT fk_tripulacion_pais FOREIGN KEY (ID_PAIS_NACIONALIDAD) REFERENCES PAIS(ID_PAIS),
    CONSTRAINT fk_tripulacion_barco FOREIGN KEY (ID_BARCO) REFERENCES BARCO(ID_BARCO)
);


-- =======================================================================
-- Parte 4: Creación de Tablas Transaccionales y de Relación
-- =======================================================================
CREATE TABLE ESCALA_PORTUARIA (
    ID_ESCALA NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ID_BARCO NUMBER NOT NULL,
    ID_PUERTO NUMBER NOT NULL,
    FECHA_LLEGADA TIMESTAMP,
    FECHA_SALIDA TIMESTAMP,
    MUELLE VARCHAR2(20),
    CONSTRAINT fk_escala_barco FOREIGN KEY (ID_BARCO) REFERENCES BARCO(ID_BARCO),
    CONSTRAINT fk_escala_puerto FOREIGN KEY (ID_PUERTO) REFERENCES PUERTO(ID_PUERTO),
    CONSTRAINT chk_fechas_escala CHECK (FECHA_SALIDA > FECHA_LLEGADA)
);

CREATE TABLE SERVICIO_ESCALA (
    ID_SERVICIO_ESCALA NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ID_ESCALA NUMBER NOT NULL,
    ID_SERVICIO NUMBER NOT NULL,
    ID_PROVEEDOR NUMBER,
    COSTO NUMBER(10, 2) DEFAULT 0.00,
    NOTAS_PROVEEDOR VARCHAR2(255),
    CONSTRAINT fk_se_escala FOREIGN KEY (ID_ESCALA) REFERENCES ESCALA_PORTUARIA(ID_ESCALA),
    CONSTRAINT fk_se_servicio FOREIGN KEY (ID_SERVICIO) REFERENCES SERVICIO(ID_SERVICIO),
    CONSTRAINT fk_se_proveedor FOREIGN KEY (ID_PROVEEDOR) REFERENCES EMPRESAS_PROVEEDORAS(ID_PROVEEDOR)
);

CREATE TABLE CARGA (
    ID_CARGA NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ID_ESCALA NUMBER NOT NULL,
    TIPO VARCHAR2(100),
    CANTIDAD NUMBER,
    PESO NUMBER(10, 3),
    ORIGEN VARCHAR2(100),
    DESTINO VARCHAR2(100),
    CONSTRAINT fk_carga_escala FOREIGN KEY (ID_ESCALA) REFERENCES ESCALA_PORTUaria(ID_ESCALA)
);

CREATE TABLE TRANSACCION (
    ID_TRANSACCION NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ID_ESCALA NUMBER NOT NULL,
    ID_CLIENTE NUMBER NOT NULL,
    MONTO NUMBER(12, 2) NOT NULL,
    ID_MONEDA NUMBER,
    ID_METODO_PAGO NUMBER,
    FECHA DATE DEFAULT SYSDATE,
    ESTADO_PAGO VARCHAR2(20) DEFAULT 'Pendiente' CHECK (ESTADO_PAGO IN ('Pendiente', 'Pagado', 'Cancelado')),
    CONSTRAINT fk_transaccion_escala FOREIGN KEY (ID_EScala) REFERENCES ESCALA_PORTUARIA(ID_ESCALA),
    CONSTRAINT fk_transaccion_cliente FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
    CONSTRAINT fk_transaccion_moneda FOREIGN KEY (ID_MONEDA) REFERENCES TIPO_MONEDA(ID_MONEDA),
    CONSTRAINT fk_transaccion_metodopago FOREIGN KEY (ID_METODO_PAGO) REFERENCES METODO_PAGO(ID_METODO_PAGO)
);

CREATE TABLE PROVEEDOR_SERVICIO (
    ID_PROV_SERV NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ID_PROVEEDOR NUMBER NOT NULL,
    ID_SERVICIO NUMBER NOT NULL,
    CONSTRAINT fk_ps_proveedor_2 FOREIGN KEY (ID_PROVEEDOR) REFERENCES EMPRESAS_PROVEEDORAS(ID_PROVEEDOR),
    CONSTRAINT fk_ps_servicio_2 FOREIGN KEY (ID_SERVICIO) REFERENCES SERVICIO(ID_SERVICIO),
    CONSTRAINT uq_proveedor_servicio UNIQUE (ID_PROVEEDOR, ID_SERVICIO)
);

CREATE TABLE CLIENTE_OPERACIONES (
    ID_CLIENTE_OPERACIONES NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ID_EMPLEADO NUMBER NOT NULL,
    ID_CLIENTE NUMBER NOT NULL,
    CONSTRAINT fk_co_empleado FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
    CONSTRAINT fk_co_cliente FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
    CONSTRAINT uq_co_asignacion UNIQUE (ID_EMPLEADO, ID_CLIENTE)
);

CREATE TABLE PETICIONESSERVICIO (
    PeticionID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EscalaPortuariaID NUMBER NOT NULL,
    ServicioID NUMBER NOT NULL,
    UsuarioID NUMBER NOT NULL,
    Estado VARCHAR2(50) DEFAULT 'Pendiente',
    FechaPeticion DATE DEFAULT SYSDATE,
    Notas VARCHAR2(500),
    CONSTRAINT fk_peticion_escala FOREIGN KEY (EscalaPortuariaID) REFERENCES ESCALA_PORTUARIA(ID_ESCALA),
    CONSTRAINT fk_peticion_servicio FOREIGN KEY (ServicioID) REFERENCES SERVICIO(ID_SERVICIO),
    CONSTRAINT fk_peticion_usuario FOREIGN KEY (UsuarioID) REFERENCES USUARIOS(UsuarioID)
);

-- =======================================================================
-- Parte 5: Inserción de Datos Iniciales (Catálogos y Usuarios)
-- =======================================================================
-- Insertar roles
INSERT INTO ROLES (NombreRol) VALUES ('administrador');
INSERT INTO ROLES (NombreRol) VALUES ('visitante');
INSERT INTO ROLES (NombreRol) VALUES ('capitan');
INSERT INTO ROLES (NombreRol) VALUES ('operador');

-- Insertar monedas
INSERT INTO TIPO_MONEDA (NOMBRE_MONEDA, CODIGO_ISO) VALUES ('Dólar Estadounidense', 'USD');
INSERT INTO TIPO_MONEDA (NOMBRE_MONEDA, CODIGO_ISO) VALUES ('Euro', 'EUR');

-- Insertar métodos de pago
INSERT INTO METODO_PAGO (NOMBRE_METODO) VALUES ('Transferencia Bancaria');
INSERT INTO METODO_PAGO (NOMBRE_METODO) VALUES ('Tarjeta de Crédito');
INSERT INTO METODO_PAGO (NOMBRE_METODO) VALUES ('Efectivo');

-- Insertar Paises
INSERT INTO PAIS (PAIS) VALUES ('Panamá');
INSERT INTO PAIS (PAIS) VALUES ('España');
INSERT INTO PAIS (PAIS) VALUES ('Liberia');
INSERT INTO PAIS (PAIS) VALUES ('Singapur');
INSERT INTO PAIS (PAIS) VALUES ('Países Bajos');
INSERT INTO PAIS (PAIS) VALUES ('Colombia');
INSERT INTO PAIS (PAIS) VALUES ('Venezuela');


-- Crear usuario admin de prueba (contraseña: admin123)
MERGE INTO USUARIOS u
USING (SELECT 'admin' AS Nombre FROM dual) src
ON (u.Nombre = src.Nombre)
WHEN MATCHED THEN
  UPDATE SET u.Password = '$2a$10$abcdefghijklmnopqrstuvwxyz1234567890ABCDEFG', u.RolID = 1
WHEN NOT MATCHED THEN
  INSERT (Nombre, Password, RolID)
  VALUES ('admin', '$2a$10$abcdefghijklmnopqrstuvwxyz1234567890ABCDEFG', 1);

COMMIT;